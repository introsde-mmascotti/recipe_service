
package recipestorage.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RecipeDBInterface", targetNamespace = "http://service.recipestorage/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RecipeDBInterface {


    /**
     * 
     * @param recipe
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "storeRecipe", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.StoreRecipe")
    @ResponseWrapper(localName = "storeRecipeResponse", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.StoreRecipeResponse")
    @Action(input = "http://service.recipestorage/RecipeDBInterface/storeRecipeRequest", output = "http://service.recipestorage/RecipeDBInterface/storeRecipeResponse")
    public Recipe storeRecipe(
        @WebParam(name = "recipe", targetNamespace = "")
        Recipe recipe);

    /**
     * 
     * @param recipeId
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(name = "recipe", targetNamespace = "")
    @RequestWrapper(localName = "getRecipeById", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.GetRecipeById")
    @ResponseWrapper(localName = "getRecipeByIdResponse", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.GetRecipeByIdResponse")
    @Action(input = "http://service.recipestorage/RecipeDBInterface/getRecipeByIdRequest", output = "http://service.recipestorage/RecipeDBInterface/getRecipeByIdResponse")
    public Recipe getRecipeById(
        @WebParam(name = "recipe_id", targetNamespace = "")
        int recipeId);

    /**
     * 
     * @param ingredient
     * @param recipe
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addIngredient", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.AddIngredient")
    @ResponseWrapper(localName = "addIngredientResponse", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.AddIngredientResponse")
    @Action(input = "http://service.recipestorage/RecipeDBInterface/addIngredientRequest", output = "http://service.recipestorage/RecipeDBInterface/addIngredientResponse")
    public Recipe addIngredient(
        @WebParam(name = "recipe", targetNamespace = "")
        Recipe recipe,
        @WebParam(name = "ingredient", targetNamespace = "")
        Ingredient ingredient);

    /**
     * 
     * @param ingredient
     * @param recipe
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeIngredient", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.RemoveIngredient")
    @ResponseWrapper(localName = "removeIngredientResponse", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.RemoveIngredientResponse")
    @Action(input = "http://service.recipestorage/RecipeDBInterface/removeIngredientRequest", output = "http://service.recipestorage/RecipeDBInterface/removeIngredientResponse")
    public Recipe removeIngredient(
        @WebParam(name = "recipe", targetNamespace = "")
        Recipe recipe,
        @WebParam(name = "ingredient", targetNamespace = "")
        Ingredient ingredient);

    /**
     * 
     * @param author
     * @param searchitem
     * @return
     *     returns java.util.List<recipestorage.service.Recipe>
     */
    @WebMethod
    @WebResult(name = "recipelist", targetNamespace = "")
    @RequestWrapper(localName = "getRecipes", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.GetRecipes")
    @ResponseWrapper(localName = "getRecipesResponse", targetNamespace = "http://service.recipestorage/", className = "recipestorage.service.GetRecipesResponse")
    @Action(input = "http://service.recipestorage/RecipeDBInterface/getRecipesRequest", output = "http://service.recipestorage/RecipeDBInterface/getRecipesResponse")
    public List<Recipe> getRecipes(
        @WebParam(name = "searchitem", targetNamespace = "")
        String searchitem,
        @WebParam(name = "author", targetNamespace = "")
        String author);

}
